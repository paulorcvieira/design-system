{"version":3,"file":"index.8aa78f38.js","sources":["../../node_modules/phosphor-react/dist/icons/CircleNotch.esm.js","../../src/components/commons/Loading/index.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n\n/* GENERATED FILE */\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M168,40.7a96,96,0,1,1-80,0\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M168,40.7a96,96,0,1,1-80,0\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M232,128A104,104,0,1,1,84.7,33.4a8.1,8.1,0,0,1,10.6,4,8,8,0,0,1-4,10.6,88,88,0,1,0,73.4,0,8,8,0,0,1-4-10.6,8.1,8.1,0,0,1,10.6-4A104.4,104.4,0,0,1,232,128Z\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M168,40.7a96,96,0,1,1-80,0\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M168,40.7a96,96,0,1,1-80,0\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M168,40.7a96,96,0,1,1-80,0\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\n\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\n\nvar CircleNotch = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nCircleNotch.displayName = \"CircleNotch\";\n\nexport default CircleNotch;\n//# sourceMappingURL=CircleNotch.esm.js.map\n","import clsx from \"clsx\";\nimport { CircleNotch } from \"phosphor-react\";\n\nexport interface LoadingProps {\n  color?: 'cyan' | 'brand' | 'gray' | 'black' | 'white' | 'green' | 'red' | 'yellow' | 'orange' | 'blue'\n}\n\nexport function Loading({ color = 'white' }: LoadingProps) {\n  return (\n    <div className=\"w-6 h-6 flex items-center justify-center overflow-hidden text-\">\n      <CircleNotch\n        weight=\"bold\"\n        className={clsx(\n          'w-4 h-4 animate-spin',\n          {\n            'text-cyan-500': color === 'cyan',\n            'text-brand-500': color === 'brand',\n            'text-gray-500': color === 'gray',\n            'text-green-500': color === 'green',\n            'text-red-500': color === 'red',\n            'text-yellow-500': color === 'yellow',\n            'text-orange-500': color === 'orange',\n            'text-blue-500': color === 'blue',\n            'text-white': color === 'white',\n            'text-black': color === 'black',\n          }\n        )}\n      />\n    </div>\n  )\n}"],"names":["pathsByWeight","Map","set","color","_jsx","_Fragment","renderPath","__name","weight","renderPathForWeight","CircleNotch","forwardRef","props","ref","IconBase","Object","assign","displayName","CircleNotch$1","Loading","clsx"],"mappings":"sQAKA,IAAIA,EAA6B,IAAIC,IACrCD,EAAcE,IAAI,OAAQ,SAAUC,EAAO,CACzC,OAAAC,EAAAC,EAAA,CAAA,SAAAD,EAAA,OAAA,CAAA,EACK,6BAA4B,KACzB,OAAM,OACJD,EAAK,cACE,QAAO,eACN,QAAO,YACV,IAAI,CAAA,CAAA,CAAA,CAErB,CAAC,EACDH,EAAcE,IAAI,UAAW,SAAUC,EAAO,CAC5C,OAAAC,EAAAC,EAAA,CAAA,SAAAD,EAAA,OAAA,CAAA,EACK,6BAA4B,KACzB,OAAM,OACJD,EAAK,cACE,QAAO,eACN,QAAO,YACV,IAAI,CAAA,CAAA,CAAA,CAErB,CAAC,EACDH,EAAcE,IAAI,OAAQ,UAAY,CACpC,OAAAE,EAAAC,EAAA,CAAA,SAAAD,EAAA,OAAA,CAAA,EACK,4JAA4J,CAAA,CAAA,CAAA,CAEnK,CAAC,EACDJ,EAAcE,IAAI,QAAS,SAAUC,EAAO,CAC1C,OAAAC,EAAAC,EAAA,CAAA,SAAAD,EAAA,OAAA,CAAA,EACK,6BAA4B,KACzB,OAAM,OACJD,EAAK,cACE,QAAO,eACN,QAAO,YACV,IAAI,CAAA,CAAA,CAAA,CAErB,CAAC,EACDH,EAAcE,IAAI,OAAQ,SAAUC,EAAO,CACzC,OAAAC,EAAAC,EAAA,CAAA,SAAAD,EAAA,OAAA,CAAA,EACK,6BAA4B,KACzB,OAAM,OACJD,EAAK,cACE,QAAO,eACN,QAAO,YACV,GAAG,CAAA,CAAA,CAAA,CAEpB,CAAC,EACDH,EAAcE,IAAI,UAAW,SAAUC,EAAO,CAC5C,OAAAC,EAAAC,EAAA,CAAA,SAAAD,EAAA,OAAA,CAAA,EACK,6BAA4B,KACzB,OAAM,OACJD,EAAK,cACE,QAAO,eACN,QAAO,YACV,IAAI,CAAA,CAAA,CAAA,CAErB,CAAC,EAED,IAAIG,EAAaC,EAAA,SAAoBC,EAAQL,EAAO,CAClD,OAAOM,EAAoBD,EAAQL,EAAOH,CAAa,CACzD,EAFiB,cAIbU,EAA2BC,EAAU,QAAA,WAAC,SAAUC,EAAOC,EAAK,CAC9D,OAAAT,EAAAU,EAAA,CAAA,GAAqCC,OAAOC,OAAO,CACjDH,IAAKA,CACN,EAAED,EAAO,CACRN,WAAYA,EACb,CAAC,CAAA,CACJ,CAAC,EACDI,EAAYO,YAAc,cAE1B,MAAAC,EAAeR,ECpER,SAAAS,EAAA,CAAiB,MAAAhB,EAAA,OAAgC,EAAA,CACtD,OAAAC,EAAA,MAAA,CACE,UAAA,iEAAe,SAAAA,EAAAM,EAAA,CACD,OAAA,OACH,UAAAU,EAAA,uBAAA,CAGL,gBAAAjB,IAAA,OAC6B,iBAAAA,IAAA,QACC,gBAAAA,IAAA,OACD,iBAAAA,IAAA,QACC,eAAAA,IAAA,MACF,kBAAAA,IAAA,SACG,kBAAAA,IAAA,SACA,gBAAAA,IAAA,OACF,aAAAA,IAAA,QACH,aAAAA,IAAA,OACA,CAAA,CACzB,CAAA,CACD,CAAA,CAIV,CAvBOI,EAAAY,EAAA"}